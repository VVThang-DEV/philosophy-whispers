import { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import {
  ArrowLeft,
  ArrowRight,
  CheckCircle2,
  TrendingUp,
  TrendingDown,
  Book,
} from "lucide-react";

interface QuickTimelineStoryProps {
  onBack: () => void;
}

interface TimelineEvent {
  year: string;
  title: string;
  image: string;
  situation: string;
  question: string;
  options: {
    text: string;
    emoji: string;
    effect: "positive" | "negative";
  }[];
  mlnExplanation: string;
  statChange: {
    superstition: number;
    literacy: number;
  };
}

const QuickTimelineStory = ({ onBack }: QuickTimelineStoryProps) => {
  const [currentEventIndex, setCurrentEventIndex] = useState(0);
  const [selectedChoices, setSelectedChoices] = useState<number[]>([]);
  const [showExplanation, setShowExplanation] = useState(false);
  const [totalSuperstition, setTotalSuperstition] = useState(80);
  const [totalLiteracy, setTotalLiteracy] = useState(20);
  const [isComplete, setIsComplete] = useState(false);

  const events: TimelineEvent[] = [
    {
      year: "1990",
      title: "Sau ƒê·ªïi M·ªõi - Kh·ªßng Ho·∫£ng Kinh T·∫ø",
      image:
        "https://images.unsplash.com/photo-1516541196182-6bdb0516ed27?w=1200&h=600&fit=crop",
      situation:
        "L√†ng qu√™ ngh√®o kh√≥, nhi·ªÅu ng∆∞·ªùi th·∫•t nghi·ªáp. D·ªãch b·ªánh lan r·ªông nh∆∞ng kh√¥ng c√≥ ti·ªÅn kh√°m b√°c sƒ©. M·ªôt th·∫ßy b√≥i n·ªïi ti·∫øng v·ªÅ l√†ng, tuy√™n b·ªë c√≥ th·ªÉ ch·ªØa b·ªánh b·∫±ng b√πa ng·∫£i.",
      question:
        "B·∫°n l√† c√°n b·ªô x√£. Ng√¢n s√°ch ch·ªâ ƒë·ªß cho 1 quy·∫øt ƒë·ªãnh. B·∫°n ch·ªçn g√¨?",
      options: [
        {
          text: "M·ªùi b√°c sƒ© v·ªÅ kh√°m b·ªánh mi·ªÖn ph√≠",
          emoji: "üè•",
          effect: "positive",
        },
        {
          text: "ƒê·ªÉ d√¢n t·ª± lo, ti·∫øt ki·ªám ng√¢n s√°ch",
          emoji: "üí∞",
          effect: "negative",
        },
      ],
      mlnExplanation:
        "**T·ªìn t·∫°i x√£ h·ªôi quy·∫øt ƒë·ªãnh √Ω th·ª©c x√£ h·ªôi**: Khi ƒëi·ªÅu ki·ªán v·∫≠t ch·∫•t (kh·∫£ nƒÉng ti·∫øp c·∫≠n y t·∫ø) thay ƒë·ªïi, nh·∫≠n th·ª©c v·ªÅ khoa h·ªçc s·∫Ω thay ƒë·ªïi theo. N·∫øu ng∆∞·ªùi d√¢n ƒë∆∞·ª£c ch·ªØa kh·ªèi b·ªánh b·∫±ng y h·ªçc, h·ªç s·∫Ω tin v√†o khoa h·ªçc h∆°n b√πa ng·∫£i.",
      statChange: { superstition: -15, literacy: 10 },
    },
    {
      year: "2000",
      title: "Th·ªùi K·ª≥ C√¥ng Nghi·ªáp H√≥a B·∫Øt ƒê·∫ßu",
      image:
        "https://images.unsplash.com/photo-1555881400-74d7acaacd8b?w=1200&h=600&fit=crop",
      situation:
        "Nhi·ªÅu nh√† m√°y m·ªü c·ª≠a. Thanh ni√™n mu·ªën xin vi·ªác nh∆∞ng thi·∫øu k·ªπ nƒÉng. M·ªôt s·ªë ng∆∞·ªùi b·ªè ti·ªÅn ƒëi xem b√≥i xem ng√†y t·ªët x·∫•u ƒë·ªÉ xin vi·ªác.",
      question: "L√†ng c√≥ ng√¢n s√°ch m·ªõi. B·∫°n ƒë·∫ßu t∆∞ v√†o ƒë√¢u?",
      options: [
        {
          text: "M·ªü l·ªõp d·∫°y ngh·ªÅ mi·ªÖn ph√≠ cho thanh ni√™n",
          emoji: "üè´",
          effect: "positive",
        },
        {
          text: "X√¢y ƒë·ªÅn th·ªù ƒë·ªÉ thu h√∫t du l·ªãch",
          emoji: "üèõÔ∏è",
          effect: "negative",
        },
      ],
      mlnExplanation:
        "**Vai tr√≤ c·ªßa gi√°o d·ª•c**: Gi√°o d·ª•c ngh·ªÅ nghi·ªáp trang b·ªã k·ªπ nƒÉng th·ª±c t·∫ø, gi√∫p ng∆∞·ªùi d√¢n t·ª± tin v√†o nƒÉng l·ª±c b·∫£n th√¢n thay v√¨ ph·ª• thu·ªôc v√†o may r·ªßi hay b√≥i to√°n. Khi c√≥ vi·ªác l√†m ·ªïn ƒë·ªãnh, nhu c·∫ßu 'c·∫ßu may' gi·∫£m ƒëi.",
      statChange: { superstition: -12, literacy: 15 },
    },
    {
      year: "2010",
      title: "Internet V√† M·∫°ng X√£ H·ªôi Ph·ªï Bi·∫øn",
      image:
        "https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=1200&h=600&fit=crop",
      situation:
        "Facebook b√πng n·ªï. Nhi·ªÅu trang b√≥i to√°n online, 'th·∫ßy' t√¢m linh livestream h√∫t h√†ng ngh√¨n views. Tin gi·∫£ lan nhanh. Nh∆∞ng c≈©ng c√≥ nhi·ªÅu k√™nh khoa h·ªçc ph·ªï th√¥ng.",
      question: "L√†m th·∫ø n√†o ƒë·ªÉ ch·ªëng tin gi·∫£ v√† m√™ t√≠n?",
      options: [
        {
          text: "T·ªï ch·ª©c workshop v·ªÅ t∆∞ duy ph·∫£n bi·ªán",
          emoji: "üß†",
          effect: "positive",
        },
        {
          text: "C·∫•m m·ªçi trang t√¢m linh (kh√≥ th·ª±c thi)",
          emoji: "üö´",
          effect: "negative",
        },
      ],
      mlnExplanation:
        "**T∆∞ duy ph·∫£n bi·ªán**: D·∫°y ng∆∞·ªùi d√¢n c√°ch ph√¢n t√≠ch th√¥ng tin, nh·∫≠n di·ªán l·ª´a ƒë·∫£o hi·ªáu qu·∫£ h∆°n c·∫•m ƒëo√°n. Khi c√≥ kh·∫£ nƒÉng t∆∞ duy ƒë·ªôc l·∫≠p, h·ªç t·ª± nh·∫≠n ra s·ª± phi l√Ω c·ªßa m√™ t√≠n.",
      statChange: { superstition: -10, literacy: 12 },
    },
    {
      year: "2015",
      title: "Kh·ªßng Ho·∫£ng Kinh T·∫ø - T√¢m L√Ω B·∫•t An",
      image:
        "https://images.unsplash.com/photo-1579621970563-ebec7560ff3e?w=1200&h=600&fit=crop",
      situation:
        "Suy tho√°i kinh t·∫ø. Nhi·ªÅu ng∆∞·ªùi th·∫•t nghi·ªáp, lo √¢u v·ªÅ t∆∞∆°ng lai. C√°c trang 'nƒÉng l∆∞·ª£ng v≈© tr·ª•', 'lu·∫≠t h·∫•p d·∫´n' b√πng n·ªï, h·ª©a h·∫πn gi·∫£i ph√°p th·∫ßn k·ª≥.",
      question: "Khi ng∆∞·ªùi d√¢n b·∫•t an v·ªÅ kinh t·∫ø, c·∫ßn l√†m g√¨?",
      options: [
        {
          text: "H·ªó tr·ª£ t√¨m vi·ªác + t∆∞ v·∫•n t√¢m l√Ω mi·ªÖn ph√≠",
          emoji: "ü§ù",
          effect: "positive",
        },
        {
          text: "K√™u g·ªçi 't·ª± tin v√†o b·∫£n th√¢n' (kh√¥ng h·ªó tr·ª£ g√¨)",
          emoji: "üì¢",
          effect: "negative",
        },
      ],
      mlnExplanation:
        "**·∫¢nh h∆∞·ªüng c·ªßa t·ªìn t·∫°i x√£ h·ªôi**: Khi ƒëi·ªÅu ki·ªán kinh t·∫ø x·∫•u ƒëi, ng∆∞·ªùi ta t√¨m ki·∫øm 'c·ª©u c√°nh' t√¢m linh v√¨ thi·∫øu gi·∫£i ph√°p th·ª±c t·∫ø. Gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ v·∫≠t ch·∫•t (vi·ªác l√†m) m·ªõi gi·∫£m ƒë∆∞·ª£c nhu c·∫ßu t√¢m linh phi l√Ω.",
      statChange: { superstition: -8, literacy: 10 },
    },
    {
      year: "2020",
      title: "ƒê·∫°i D·ªãch COVID-19",
      image:
        "https://images.unsplash.com/photo-1584036561566-baf8f5f1b144?w=1200&h=600&fit=crop",
      situation:
        "ƒê·∫°i d·ªãch b√πng ph√°t. S·ª£ h√£i lan r·ªông. Nhi·ªÅu tin gi·∫£ v·ªÅ 'th·∫ßn d∆∞·ª£c ch·ªØa Covid', 'b√πa h·ªô m·ªánh', 'nƒÉng l∆∞·ª£ng t√≠ch c·ª±c ƒë·∫©y l√πi virus'. Nh∆∞ng c≈©ng c√≥ nhi·ªÅu ng∆∞·ªùi theo d√µi th√¥ng tin y t·∫ø ch√≠nh th·ªëng.",
      question: "Trong kh·ªßng ho·∫£ng y t·∫ø, chi·∫øn l∆∞·ª£c n√†o hi·ªáu qu·∫£?",
      options: [
        {
          text: "Truy·ªÅn th√¥ng khoa h·ªçc r√µ r√†ng + minh b·∫°ch s·ªë li·ªáu",
          emoji: "üìä",
          effect: "positive",
        },
        {
          text: "Ki·ªÉm duy·ªát m·ªçi th√¥ng tin (m·∫•t l√≤ng tin)",
          emoji: "üîí",
          effect: "negative",
        },
      ],
      mlnExplanation:
        "**Vai tr√≤ c·ªßa th√¥ng tin khoa h·ªçc**: Trong kh·ªßng ho·∫£ng, ng∆∞·ªùi d√¢n c·∫ßn th√¥ng tin ch√≠nh x√°c v√† minh b·∫°ch. Khi th·∫•y khoa h·ªçc gi·∫£i th√≠ch ƒë∆∞·ª£c v√† c√≥ gi·∫£i ph√°p th·ª±c t·∫ø, h·ªç s·∫Ω gi·∫£m tin v√†o gi·∫£i ph√°p phi khoa h·ªçc.",
      statChange: { superstition: -5, literacy: 8 },
    },
  ];

  const currentEvent = events[currentEventIndex];
  const isLastEvent = currentEventIndex === events.length - 1;

  const handleChoice = (choiceIndex: number) => {
    const choice = currentEvent.options[choiceIndex];

    if (choice.effect === "positive") {
      setTotalSuperstition(
        Math.max(0, totalSuperstition + currentEvent.statChange.superstition)
      );
      setTotalLiteracy(
        Math.min(100, totalLiteracy + currentEvent.statChange.literacy)
      );
    } else {
      setTotalSuperstition(
        Math.min(
          100,
          totalSuperstition - currentEvent.statChange.superstition / 2
        )
      );
      setTotalLiteracy(
        Math.max(0, totalLiteracy - currentEvent.statChange.literacy / 2)
      );
    }

    setSelectedChoices([...selectedChoices, choiceIndex]);
    setShowExplanation(true);
  };

  const handleNext = () => {
    // Smooth transition to next scene
    const card = document.querySelector(".event-card");
    if (card) {
      card.classList.add("fade-out");
      setTimeout(() => {
        if (isLastEvent) {
          setIsComplete(true);
        } else {
          setCurrentEventIndex(currentEventIndex + 1);
          setShowExplanation(false);
          card.classList.remove("fade-out");
          card.classList.add("zoom-in");
        }
      }, 300);
    } else {
      if (isLastEvent) {
        setIsComplete(true);
      } else {
        setCurrentEventIndex(currentEventIndex + 1);
        setShowExplanation(false);
      }
    }
  };

  if (isComplete) {
    return (
      <div className="min-h-screen bg-gradient-to-b from-[hsl(240,45%,6%)] to-[hsl(240,40%,8%)] p-3 sm:p-6 md:p-8">
        <div className="container mx-auto max-w-4xl">
          <Card className="bg-[hsl(240,45%,8%)]/95 backdrop-blur-xl border-[hsl(140,60%,50%)]/40 overflow-hidden">
            <div className="relative h-48 sm:h-56 md:h-64 overflow-hidden">
              <img
                src="https://images.unsplash.com/photo-1523240795612-9a054b0db644?w=1200&h=600&fit=crop"
                alt="Completed"
                className="w-full h-full object-cover"
              />
              <div className="absolute inset-0 bg-gradient-to-t from-[hsl(240,45%,8%)] via-[hsl(240,45%,8%)]/80 to-transparent flex items-center justify-center">
                <div className="text-center px-4">
                  <CheckCircle2 className="w-16 h-16 sm:w-20 sm:h-20 md:w-24 md:h-24 text-[hsl(140,60%,60%)] mx-auto mb-3 sm:mb-4 animate-pulse" />
                  <h1 className="text-3xl sm:text-4xl md:text-5xl font-black text-[hsl(40,20%,95%)]">
                    Ho√†n Th√†nh!
                  </h1>
                </div>
              </div>
            </div>

            <div className="p-4 sm:p-6 md:p-8">
              <h2 className="text-2xl sm:text-3xl font-bold text-[hsl(40,20%,95%)] mb-4 sm:mb-6">
                K·∫øt Qu·∫£ C·ªßa B·∫°n
              </h2>

              <div className="grid sm:grid-cols-2 gap-4 sm:gap-6 mb-6 sm:mb-8">
                <Card className="bg-[hsl(240,40%,10%)] border-[hsl(0,70%,60%)]/30 p-4 sm:p-6">
                  <div className="flex items-center justify-between mb-3 sm:mb-4">
                    <div className="flex items-center gap-2">
                      <TrendingDown className="w-5 h-5 sm:w-6 sm:h-6 text-[hsl(0,70%,65%)]" />
                      <h3 className="text-base sm:text-xl font-bold text-[hsl(40,20%,95%)]">
                        T·ª∑ L·ªá M√™ T√≠n
                      </h3>
                    </div>
                    <span className="text-2xl sm:text-3xl font-black text-[hsl(0,70%,65%)]">
                      {totalSuperstition.toFixed(0)}%
                    </span>
                  </div>
                  <div className="w-full bg-[hsl(240,40%,15%)] rounded-full h-3 sm:h-4 overflow-hidden">
                    <div
                      className="bg-gradient-to-r from-[hsl(0,70%,60%)] to-[hsl(0,70%,50%)] h-full rounded-full transition-all duration-1000"
                      style={{ width: `${totalSuperstition}%` }}
                    />
                  </div>
                </Card>

                <Card className="bg-[hsl(240,40%,10%)] border-[hsl(220,70%,60%)]/30 p-4 sm:p-6">
                  <div className="flex items-center justify-between mb-3 sm:mb-4">
                    <div className="flex items-center gap-2">
                      <TrendingUp className="w-5 h-5 sm:w-6 sm:h-6 text-[hsl(220,70%,65%)]" />
                      <h3 className="text-base sm:text-xl font-bold text-[hsl(40,20%,95%)]">
                        T·ª∑ L·ªá Gi√°o D·ª•c
                      </h3>
                    </div>
                    <span className="text-2xl sm:text-3xl font-black text-[hsl(220,70%,65%)]">
                      {totalLiteracy.toFixed(0)}%
                    </span>
                  </div>
                  <div className="w-full bg-[hsl(240,40%,15%)] rounded-full h-3 sm:h-4 overflow-hidden">
                    <div
                      className="bg-gradient-to-r from-[hsl(220,70%,60%)] to-[hsl(220,70%,50%)] h-full rounded-full transition-all duration-1000"
                      style={{ width: `${totalLiteracy}%` }}
                    />
                  </div>
                </Card>
              </div>

              <Card className="bg-[hsl(270,60%,50%)]/10 border-[hsl(270,60%,50%)]/30 p-4 sm:p-6 mb-4 sm:mb-6">
                <h3 className="text-xl sm:text-2xl font-bold text-[hsl(270,60%,75%)] mb-3 sm:mb-4 flex items-center gap-2">
                  <Book className="w-5 h-5 sm:w-6 sm:h-6" />
                  Ph√¢n T√≠ch Duy V·∫≠t L·ªãch S·ª≠
                </h3>
                <div className="space-y-3 sm:space-y-4 text-sm sm:text-base text-[hsl(40,20%,95%)]/80 leading-relaxed">
                  <p>
                    <strong className="text-[hsl(270,60%,75%)]">
                      1. T·ªìn t·∫°i x√£ h·ªôi quy·∫øt ƒë·ªãnh √Ω th·ª©c x√£ h·ªôi:
                    </strong>{" "}
                    Qua 30 nƒÉm l·ªãch s·ª≠, ta th·∫•y r√µ khi ƒëi·ªÅu ki·ªán v·∫≠t ch·∫•t ƒë∆∞·ª£c
                    c·∫£i thi·ªán (y t·∫ø, gi√°o d·ª•c, vi·ªác l√†m), m·ª©c ƒë·ªô m√™ t√≠n gi·∫£m
                    xu·ªëng. ƒê√¢y l√† minh ch·ª©ng cho nguy√™n l√Ω c∆° b·∫£n c·ªßa ch·ªß nghƒ©a
                    duy v·∫≠t.
                  </p>
                  <p>
                    <strong className="text-[hsl(220,70%,70%)]">
                      2. Vai tr√≤ c·ªßa gi√°o d·ª•c:
                    </strong>{" "}
                    Gi√°o d·ª•c kh√¥ng ch·ªâ truy·ªÅn ƒë·∫°t ki·∫øn th·ª©c m√† c√≤n h√¨nh th√†nh t∆∞
                    duy ph·∫£n bi·ªán, gi√∫p ng∆∞·ªùi d√¢n t·ª± ph√¢n t√≠ch v√† nh·∫≠n di·ªán
                    th√¥ng tin sai l·ªách.
                  </p>
                  <p>
                    <strong className="text-[hsl(140,60%,60%)]">
                      3. ·∫¢nh h∆∞·ªüng c·ªßa kh·ªßng ho·∫£ng:
                    </strong>{" "}
                    Trong th·ªùi k·ª≥ kh√≥ khƒÉn (1990, 2015, 2020), ng∆∞·ªùi d√¢n c√≥ xu
                    h∆∞·ªõng t√¨m ki·∫øm gi·∫£i ph√°p t√¢m linh khi thi·∫øu gi·∫£i ph√°p v·∫≠t
                    ch·∫•t. ƒê√¢y l√† ph·∫£n ·ª©ng t·ª± nhi√™n c·ªßa √Ω th·ª©c khi t·ªìn t·∫°i x√£ h·ªôi
                    b·∫•p b√™nh.
                  </p>
                  <p>
                    <strong className="text-[hsl(0,70%,65%)]">
                      4. T√¢m l√Ω ƒë√°m ƒë√¥ng:
                    </strong>{" "}
                    M·∫°ng x√£ h·ªôi khu·∫øch ƒë·∫°i c·∫£ th√¥ng tin t·ªët l·∫´n x·∫•u. Khi thi·∫øu
                    t∆∞ duy ph·∫£n bi·ªán, ng∆∞·ªùi d√¢n d·ªÖ b·ªã cu·ªën theo tr√†o l∆∞u m√™ t√≠n
                    t·∫≠p th·ªÉ.
                  </p>
                </div>
              </Card>

              <div className="flex flex-col sm:flex-row gap-3 sm:gap-4">
                <Button
                  onClick={onBack}
                  variant="outline"
                  className="flex-1 border-[hsl(40,20%,95%)]/20 hover:bg-[hsl(40,20%,95%)]/10 py-5 sm:py-6"
                >
                  <ArrowLeft className="w-4 h-4 mr-2" />
                  Quay L·∫°i
                </Button>
                <Button
                  onClick={() => {
                    setCurrentEventIndex(0);
                    setSelectedChoices([]);
                    setShowExplanation(false);
                    setTotalSuperstition(80);
                    setTotalLiteracy(20);
                    setIsComplete(false);
                  }}
                  className="flex-1 bg-gradient-to-r from-[hsl(270,60%,50%)] to-[hsl(220,70%,55%)] hover:from-[hsl(270,60%,60%)] hover:to-[hsl(220,70%,65%)] py-5 sm:py-6"
                >
                  Ch∆°i L·∫°i
                </Button>
              </div>
            </div>
          </Card>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-b from-[hsl(240,45%,6%)] to-[hsl(240,40%,8%)] p-3 sm:p-6 md:p-8">
      <div className="container mx-auto max-w-5xl">
        {/* Progress Bar */}
        <div className="mb-4 sm:mb-6">
          <div className="flex justify-between items-center mb-2">
            <Button
              onClick={onBack}
              variant="outline"
              size="sm"
              className="border-[hsl(40,20%,95%)]/20 hover:bg-[hsl(40,20%,95%)]/10 text-xs sm:text-sm"
            >
              <ArrowLeft className="w-3 h-3 sm:w-4 sm:h-4 mr-1 sm:mr-2" />
              Quay L·∫°i
            </Button>
            <span className="text-xs sm:text-sm text-[hsl(40,20%,95%)]/60">
              {currentEventIndex + 1} / {events.length}
            </span>
          </div>
          <div className="w-full bg-[hsl(240,40%,15%)] rounded-full h-1.5 sm:h-2 overflow-hidden">
            <div
              className="bg-gradient-to-r from-[hsl(270,60%,50%)] to-[hsl(220,70%,55%)] h-full rounded-full transition-all duration-500"
              style={{
                width: `${((currentEventIndex + 1) / events.length) * 100}%`,
              }}
            />
          </div>
        </div>

        {/* Main Event Card */}
        <Card className="event-card bg-[hsl(240,45%,8%)]/95 backdrop-blur-xl border-[hsl(270,60%,50%)]/40 overflow-hidden transition-all duration-300">
          {/* Hero Image */}
          <div className="relative h-48 sm:h-64 md:h-80 overflow-hidden">
            <div className="absolute inset-0 bg-gradient-to-t from-transparent via-transparent to-[hsl(270,60%,50%)]/10 animate-pulse" />
            <img
              src={currentEvent.image}
              alt={currentEvent.title}
              className="w-full h-full object-cover"
            />
            <div className="absolute inset-0 bg-gradient-to-t from-[hsl(240,45%,8%)] via-[hsl(240,45%,8%)]/60 to-transparent" />
            <div className="absolute bottom-3 left-3 right-3 sm:bottom-4 sm:left-4 sm:right-4">
              <div className="inline-block bg-[hsl(270,60%,50%)]/80 backdrop-blur-sm px-2 py-0.5 sm:px-3 sm:py-1 rounded-full mb-1 sm:mb-2">
                <span className="text-white text-xs sm:text-sm font-semibold">
                  {currentEvent.year}
                </span>
              </div>
              <h2 className="text-2xl sm:text-4xl md:text-5xl font-black text-[hsl(40,20%,95%)] drop-shadow-[0_2px_10px_rgba(0,0,0,0.9)]">
                {currentEvent.title}
              </h2>
            </div>
          </div>

          <div className="p-4 sm:p-6 md:p-8">
            {/* Stats Display */}
            <div className="grid grid-cols-2 gap-3 sm:gap-4 mb-4 sm:mb-6">
              <Card className="bg-[hsl(0,70%,60%)]/10 border-[hsl(0,70%,60%)]/30 p-3 sm:p-4">
                <div className="text-xs sm:text-sm text-[hsl(40,20%,95%)]/60 mb-1">
                  M√™ T√≠n
                </div>
                <div className="text-2xl sm:text-3xl font-black text-[hsl(0,70%,65%)]">
                  {totalSuperstition.toFixed(0)}%
                </div>
              </Card>
              <Card className="bg-[hsl(220,70%,60%)]/10 border-[hsl(220,70%,60%)]/30 p-3 sm:p-4">
                <div className="text-xs sm:text-sm text-[hsl(40,20%,95%)]/60 mb-1">
                  Gi√°o D·ª•c
                </div>
                <div className="text-2xl sm:text-3xl font-black text-[hsl(220,70%,65%)]">
                  {totalLiteracy.toFixed(0)}%
                </div>
              </Card>
            </div>

            {/* Situation - Always visible */}
            <Card className="bg-[hsl(240,40%,10%)] border-[hsl(270,60%,50%)]/20 p-4 sm:p-6 mb-4 sm:mb-6">
              <h3 className="text-lg sm:text-xl font-bold text-[hsl(270,60%,75%)] mb-2 sm:mb-3">
                T√¨nh Hu·ªëng
              </h3>
              <p className="text-sm sm:text-base text-[hsl(40,20%,95%)]/80 leading-relaxed">
                {currentEvent.situation}
              </p>
            </Card>

            {/* Fixed height container for smooth transition */}
            <div className="min-h-[280px] sm:min-h-[320px] relative">
              {!showExplanation ? (
                <div className="slide-up">
                  {/* Question */}
                  <h3 className="text-xl sm:text-2xl font-bold text-[hsl(40,20%,95%)] mb-3 sm:mb-4">
                    {currentEvent.question}
                  </h3>

                  {/* Options */}
                  <div className="space-y-3 sm:space-y-4">
                    {currentEvent.options.map((option, index) => (
                      <Button
                        key={index}
                        onClick={() => handleChoice(index)}
                        style={{ animationDelay: `${index * 100}ms` }}
                        className={`w-full text-left justify-start h-auto p-4 sm:p-6 opacity-0 slide-up transition-all duration-300 ${
                          option.effect === "positive"
                            ? "bg-gradient-to-r from-[hsl(140,60%,40%)]/20 to-[hsl(140,60%,40%)]/10 border-[hsl(140,60%,50%)]/40 hover:border-[hsl(140,60%,50%)]/60 hover:shadow-[0_0_20px_hsl(140,60%,50%,0.3)] active:scale-95"
                            : "bg-gradient-to-r from-[hsl(0,70%,50%)]/20 to-[hsl(0,70%,50%)]/10 border-[hsl(0,70%,60%)]/40 hover:border-[hsl(0,70%,60%)]/60 hover:shadow-[0_0_20px_hsl(0,70%,60%,0.3)] active:scale-95"
                        }`}
                        variant="outline"
                      >
                        <span className="text-3xl sm:text-4xl mr-3 sm:mr-4 transition-transform group-hover:scale-110">
                          {option.emoji}
                        </span>
                        <span className="text-base sm:text-lg text-[hsl(40,20%,95%)]">
                          {option.text}
                        </span>
                      </Button>
                    ))}
                  </div>
                </div>
              ) : (
                <div className="zoom-in">
                  {/* Explanation */}
                  <Card className="bg-[hsl(270,60%,50%)]/10 border-[hsl(270,60%,50%)]/30 p-4 sm:p-6 mb-4 sm:mb-6 transition-all duration-300 hover:border-[hsl(270,60%,50%)]/50 hover:shadow-[0_0_30px_hsl(270,60%,50%,0.2)]">
                    <h3 className="text-lg sm:text-xl font-bold text-[hsl(270,60%,75%)] mb-2 sm:mb-3 flex items-center gap-2">
                      <Book className="w-4 h-4 sm:w-5 sm:h-5 animate-pulse" />
                      Gi·∫£i Th√≠ch MLN
                    </h3>
                    <p className="text-sm sm:text-base text-[hsl(40,20%,95%)]/80 leading-relaxed">
                      {currentEvent.mlnExplanation}
                    </p>
                  </Card>

                  {/* Next Button */}
                  <Button
                    onClick={handleNext}
                    className="w-full bg-gradient-to-r from-[hsl(270,60%,50%)] to-[hsl(220,70%,55%)] hover:from-[hsl(270,60%,60%)] hover:to-[hsl(220,70%,65%)] hover:shadow-[0_0_30px_hsl(270,60%,50%,0.4)] active:scale-95 py-5 sm:py-6 text-base sm:text-lg transition-all duration-300"
                  >
                    {isLastEvent ? "Xem K·∫øt Qu·∫£" : "Ti·∫øp Theo"}
                    <ArrowRight className="w-4 h-4 sm:w-5 sm:h-5 ml-2" />
                  </Button>
                </div>
              )}
            </div>
          </div>
        </Card>
      </div>
    </div>
  );
};

export default QuickTimelineStory;
